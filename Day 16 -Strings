Valid Anagrams

//{ Driver Code Starts
import java.io.*;
import java.lang.*;
import java.util.*;
import java.util.stream.*;

class GFG {

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());
        while (t-- > 0) {
            String s1 = br.readLine(); // first string
            String s2 = br.readLine(); // second string

            Solution obj = new Solution();

            if (obj.areAnagrams(s1, s2)) {
                System.out.println("true");
            } else {
                System.out.println("false");
            }
            System.out.println("~");
        }
    }
}
// } Driver Code Ends


class Solution {
    // Function is to check whether two strings are anagram of each other or not.
    public static boolean areAnagrams(String s1, String s2) {

        // Your code here
        if(s1.length()!=s2.length())
        {
            return false;
        }
        if(s1.length()==1 && s2.length()==1 && s1.charAt(0)==s2.charAt(0))
        {
            return true;
        }
        char arr1[]=s1.toCharArray();
        char arr2[]=s2.toCharArray();
        HashMap<Character,Integer> map=new HashMap<>();
        for(char curr:arr1)
        {
            map.put(curr,map.getOrDefault(curr,0)+1);
        }
        for(char c:arr2)
        {
            if(!map.containsKey(c))
            {
                return false;
            }
            if(map.get(c)==0)
            {
                return false;
            }
            map.put(c,map.getOrDefault(c,0)-1);
        }
   for(int count:map.values())
        {
            if(count!=0)
            {
                return false;
            }
        }
   return true; }
}
