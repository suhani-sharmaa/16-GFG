longest substring without repeating characters

//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.HashMap;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String s = read.readLine();
            Solution ob = new Solution();
            System.out.println(ob.longestUniqueSubstr(s));
            System.out.println("~");
        }
    }
}

// } Driver Code Ends


// User function Template for Java

class Solution {
    public int longestUniqueSubstr(String s) {
        int res=0;
        // code here
        boolean visited[]=new boolean[26];
        int left=0,right=0;
        while(right<s.length())
        {
            while(visited[s.charAt(right)-'a']==true)
            {
                visited[s.charAt(left)-'a']=false;
                left++;
            }
            visited[s.charAt(right)-'a']=true;
            res=Math.max(res,(right-left+1));
            right++;
        }
    return res;}
}
