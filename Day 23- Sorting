Count Inversions

//{ Driver Code Starts
import java.io.*;
import java.util.*;

class Sorting {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());
        for (int g = 0; g < t; g++) {
            String[] str = (br.readLine()).trim().split(" ");
            int arr[] = new int[str.length];
            for (int i = 0; i < str.length; i++) arr[i] = Integer.parseInt(str[i]);
            System.out.println(new Solution().inversionCount(arr));
            System.out.println("~");
        }
    }
}
// } Driver Code Ends


// User function Template for Java

class Solution {
    static int countAndMerge(int arr[],int left,int mid,int right)
    {
        int n1=mid-left+1;
        int n2=right-mid;
        int leftArr[]=new int[mid-left+1];
        int rightArr[]=new int[right-mid];
        int inv=0;
        for(int i=0;i<n1;i++)
        {
            leftArr[i]=arr[i+left];
        }
        for(int i=0;i<n2;i++)
        {
            rightArr[i]=arr[mid+i+1];
        }
        int i=0,j=0,k=left;
        while(i<n1 && j<n2)
        {
            if(leftArr[i]<=rightArr[j])
            {
                arr[k]=leftArr[i];
                k++;
                i++;
                
            }
            else {
                arr[k]=rightArr[j];
                k++;
                j++;
                inv+=(n1-i);
            }
        }
        while(i<n1)
        {
            arr[k++]=leftArr[i++];
        }
        while(j<n2)
        {
            arr[k++]=rightArr[j++];
        }
   return inv; }
    static int countInv(int arr[],int l,int r)
    {
        int res=0;
        if(l<r)
        {
            int mid=(l+r)/2;
            res+=countInv(arr,l,mid);
            res+=countInv(arr,mid+1,r);
            res+=countAndMerge(arr,l,mid,r);
        }
        return res;
    }
    // Function to count inversions in the array.
    static int inversionCount(int arr[]) {
        // Your Code Here
        return countInv(arr,0,arr.length-1);
    }
}
